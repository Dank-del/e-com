// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  carts         Cart[]
  orders        Order[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  price       Float
  category    String
  imageUrl    String
  cartItems   CartItem[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    String
  createdAt DateTime   @default(now())
  totalCost Float
  items     CartItem[]
  user      User       @relation(fields: [userId], references: [id])
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int
  totalCost Float
  product   Product @relation(fields: [productId], references: [id])
  cart      Cart    @relation(fields: [cartId], references: [id])
  orderId   Int?
  order     Order?  @relation(fields: [orderId], references: [id])
}

model Order {
  id           Int        @id @default(autoincrement())
  userId       String
  createdAt    DateTime   @default(now())
  totalCost    Float
  user         User       @relation(fields: [userId], references: [id])
  orderedItems CartItem[]
}
